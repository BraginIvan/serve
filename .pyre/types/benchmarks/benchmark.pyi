PLATFORM: str = ...
TMP_DIR: str = ...
MODEL_MAP: typing.Dict[str, typing.Tuple[str, typing.Dict[str, str]]] = ...
EXPERIMENT_RESULTS_MAP: typing.Dict[str, typing.List[str]] = ...
benchmark_name_options: typing.List[str] = ...
target: argparse._MutuallyExclusiveGroup = ...
model: argparse._MutuallyExclusiveGroup = ...
pargs: argparse.Namespace = ...
CMDRUNNER: str = ...
JMETER: str = ...
JMETER_VERSION: str = ...
def get_resource(name: str): ...
def modify_config_props_for_ts(pargs) -> None: ...
def run_benchmark() -> None: ...
def run_process(cmd, wait: bool = True, **kwargs): ...
def run_single_benchmark(jmx, jmeter_args=dict(), threads: int = 100, out_dir: typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, str] = None): ...
class ChDir:
    def __enter__(self) -> None: ...
    def __exit__(self, *args) -> None: ...
    def __init__(self, path) -> None: ...

