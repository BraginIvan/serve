def check_instance_state(instance_id, state: str = "running", region: str = ci.launcher.utils.DEFAULT_REGION): ...
def check_system_state(instance_id, system_status: str = "ok", instance_status: str = "ok", region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_ec2_instance_tags(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION, ec2_client=None): ...
def get_instance_details(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_instance_from_id(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_instance_state(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_instance_type_details(instance_type, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_instance_user(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION) -> str: ...
def get_public_ip(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_public_ip_from_private_dns(private_dns, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def get_system_state(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION): ...
def launch_instance(ami_id, instance_type, ec2_key_name=None, region: str = "us-west-2", user_data=None, iam_instance_profile_name=None, instance_name: str = ""): ...
def terminate_instance(instance_id, region: str = ci.launcher.utils.DEFAULT_REGION) -> None: ...
