def getAPIS(snapshot_file) -> typing.Tuple[str, str]: ...
def mnist_model_register_and_scale_using_non_existent_handler_asynchronous() -> None: ...
def mnist_model_register_and_scale_using_non_existent_handler_synchronous() -> None: ...
def mnist_model_register_using_non_existent_handler_then_scale_up(synchronous: bool = False) -> requests.models.Response: ...
def run_inference_using_url_with_data(purl=None, pfiles=None, ptimeout: int = 120) -> typing.Optional[requests.models.Response]: ...
def run_inference_using_url_with_data_json(purl=None, json_input=None, ptimeout: int = 120) -> typing.Optional[requests.models.Response]: ...
def setup_module(module) -> None: ...
def teardown_module(module) -> None: ...
def test_MMF_activity_recognition_model_register_and_inference_on_valid_model() -> None: ...
def test_huggingface_bert_batch_inference() -> None: ...
def test_kserve_mnist_model_register_and_inference_on_valid_model() -> None: ...
def test_kserve_mnist_model_register_and_inference_on_valid_model_explain() -> None: ...
def test_kserve_mnist_model_register_scale_inference_with_non_existent_handler() -> None: ...
def test_mnist_model_register_and_inference_on_valid_model() -> None: ...
def test_mnist_model_register_and_inference_on_valid_model_explain() -> None: ...
def test_mnist_model_register_scale_inference_with_non_existent_handler() -> None: ...
def test_mnist_model_register_using_non_existent_handler_with_nonzero_workers() -> None: ...
