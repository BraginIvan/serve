class ModelExportUtils:
    def archive(export_file, model_name, model_path, manifest, archive_format: str = "default") -> None: ...
    def archive_dir(path, dst, archive_format, model_name) -> None: ...
    def check_mar_already_exists(model_name, export_file_path, overwrite, archive_format: str = "default") -> str: ...
    def check_model_name_regex_or_exit(model_name) -> None: ...
    def clean_temp_files(temp_files) -> None: ...
    def directory_filter(directory, unwanted_dirs) -> bool: ...
    def file_filter(current_file, files_to_exclude) -> bool: ...
    def generate_model(modelargs) -> model-archiver.model_archiver.manifest_components.model.Model: ...
    def make_dir(d: typing.Union[os.PathLike[bytes], os.PathLike[str], bytes, str]) -> None: ...
    def validate_inputs(model_name, export_path) -> None: ...

