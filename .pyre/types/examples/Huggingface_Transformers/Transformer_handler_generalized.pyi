logger: logging.Logger = ...
def captum_sequence_forward(inputs, attention_mask=None, position: int = 0, model=None): ...
def construct_input_ref(text: typing.Union[_ast.AST, str], tokenizer, device, mode): ...
class TransformersSeqClassifierHandler:
    def __init__(self) -> None: ...
    def get_insights(self, input_batch, text: typing.Union[_ast.AST, str], target) -> typing.List[typing.Dict[str, typing.Any]]: ...
    def initialize(self, ctx) -> None: ...

