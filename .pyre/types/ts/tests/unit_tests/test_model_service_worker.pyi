def model_service_worker(socket_patches) -> ts.model_service_worker.TorchModelServiceWorker: ...
def socket_patches(mocker) -> ts.tests.unit_tests.test_model_service_worker.socket_patches.Patches: ...
class TestHandleConnection:
    def patches(self, mocker) -> ts.tests.unit_tests.test_model_service_worker.TestHandleConnection.patches.Patches: ...
    def test_handle_connection(self, patches, model_service_worker) -> None: ...

class TestInit:
    def patches(self, mocker) -> ts.tests.unit_tests.test_model_service_worker.TestInit.patches.Patches: ...
    def test_missing_socket_name(self) -> None: ...
    def test_socket_in_use(self, mocker) -> None: ...
    def test_success(self, patches) -> None: ...

class TestLoadModel:
    def patches(self, mocker) -> ts.tests.unit_tests.test_model_service_worker.TestLoadModel.patches.Patches: ...
    def test_load_model(self, patches, model_service_worker) -> None: ...
    def test_optional_args(self, patches, model_service_worker, batch_size, gpu) -> None: ...

class TestRunServer:
    def test_success(self, model_service_worker) -> None: ...
    def test_with_run_server_debug(self, socket_patches, model_service_worker, mocker) -> None: ...
    def test_with_socket_bind_error(self, socket_patches, model_service_worker) -> None: ...
    def test_with_timeout(self, socket_patches, model_service_worker) -> None: ...

